/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 08 06:35:12 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Sum_ESTest extends Sum_ESTest_scaffolding {

//   两个整数之和：入参都是0
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Sum sum0 = new Sum();
      Integer integer0 = new Integer(0);
      Integer integer1 = sum0.sumTwo(integer0, integer0);
      assertEquals(0, (int)integer1);
  }

//  两个整数之和：入参都是正整数，为了看失败，直接修改预期结果为13，应该是12
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Sum sum0 = new Sum();
      Integer integer0 = new Integer(6);
      Integer integer1 = sum0.sumTwo(integer0, integer0);
      assertEquals(13, (int)integer1);
  }
//    两个整数之和：入参都是负整数
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Sum sum0 = new Sum();
      Integer integer0 = new Integer((-2715));
      Integer integer1 = sum0.sumTwo(integer0, integer0);
      assertEquals((-5430), (int)integer1);
  }
//两个数做除法运算：除数是0，被除数是负整数
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Sum sum0 = new Sum();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer((-2996));
      Integer integer2 = sum0.idiv(integer0, integer1);
      assertEquals(0, (int)integer2);
  }

//    两个数做除法运算：入参是负整数
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Sum sum0 = new Sum();
      Integer integer0 = new Integer((-1100));
      Integer integer1 = sum0.idiv(integer0, integer0);
      assertEquals(1, (int)integer1);
      
      Integer integer2 = sum0.idiv(integer0, integer1);
      assertEquals((-1100), (int)integer2);
  }
//    两个数做除法运算：入参都是0
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Sum sum0 = new Sum();
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        sum0.idiv(integer0, integer0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
          System.out.println("Idiv exception:"+e);
         verifyException("Sum", e);
      }
  }

//    两个数做除法运算：入参都是null
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Sum sum0 = new Sum();
      // Undeclared exception!
      try { 
        sum0.idiv(sum0.b, sum0.b);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Sum", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Sum sum0 = new Sum();
      // Undeclared exception!
      try { 
        sum0.sumTwo(sum0.a, sum0.a);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Sum", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      String[] stringArray0 = new String[7];
      Sum.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }
}
